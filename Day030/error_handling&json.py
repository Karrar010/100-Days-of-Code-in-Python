# There are 4 major steps towards handling an error or an exception
# 1. try 2. except 3. else 4. finally

try: #through this we try to run and achieve something
    file = open("./Day29&30/new_file.txt")
    print(file.read())
    dict = {"key": "value"}
    print(dict["nunu"])

except FileNotFoundError: #if above try does not run and encounters an error of FilenotFound then we run this
    file = open("./Day29&30/new_file.txt", "w")
    print(file.write("something new"))
except: #if error other than filenotfound than do this
    print("A KeyError occured")

else: #if code has run successfully without any error than this
    print(file.read())
    print("There was no error in code")

finally: #this piece of code will run always at the end of each execution
    file.close()

    #there is another property called raise, through which error/exceptions are raised
    # raise TypeError("This is self made error")


# CHALLENGE 1: fix this IndexError using Exception handling and print 
# fruits = ["apple", "mango","kiwi","pinnaple"]
# # print(fruits[4]+" pie")

# try: 
#     print(fruits[4]+" pie")
# except:
#     print("Fruit"+" pie")
# else:
#     print("No error")


        # #these popups generated by tkinter are called standard dialogs
        # confirmation_of_details = tkinter.messagebox.askokcancel(title= "Confirmation", message = f"These are the details:\nWebsite:    {website_input.get()}\nUser:\t   {user_detail_input.get()}\nPassword:  {password_input.get()}\nAre you Sure?")

        # if confirmation_of_details:
